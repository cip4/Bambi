<?xml version="1.0"?>
<project name="BambiCore" default="dist" basedir=".">
	<description>Bambi's Core Package</description>
	<!-- Initializes -->
	<target name="-init" description="Initializes the build. This task is automatically run before building.">
		<echo>Initializing. Using build settings from ./build.properties...</echo>
		<!-- Sets properties -->
		<tstamp/>
	   	<property name="BambCore.name" value="BambiCore" />
		<property file="version.properties"/>
		<property name="src.dir" value="./src" />
		<property name="core.src.dir" value="${src.dir}/java/org/cip4/bambi/core" />
		<property name="lib.dir" value="${src.dir}/lib" />
		<property name="bin.dir" value="./bin/core" />
		<property name="dist.dir" value="./dist/core" />
		<property name="build.debug" value="true" />
		<property name="base.filename" value="${BambCore.name}-${DSTAMP}" />
		<property name="major.filename" value="${BambCore.name}" />		

		<property name="verbose" value="true" />
		<!-- Sets class path -->
		<path id="project.class.path">
			<pathelement path="${java.class.path}" />
			<fileset dir="${lib.dir}">
				<include name="**/*.jar" />
			</fileset>
		</path>
		<!-- Creates directories -->
		<mkdir dir="${bin.dir}" />
		<mkdir dir="${dist.dir}" />
	</target>
	<target name="compile" depends="-init" description="Compiles source code.">
		<echo>Compiling BambiCore...</echo>
		<javac destdir="${bin.dir}" debug="${build.debug}">
			<src path="${core.src.dir}" />
			<classpath refid="project.class.path" />
			<include name="**/*.java" />
		</javac>
	</target>
	<target name="jar" depends="compile" description="Bundles source code into a JAR file.">
		<echo>Building JAR file...</echo>
		<jar jarfile="${dist.dir}/${base.filename}.jar" basedir="${bin.dir}" />
	</target>
	<target name="major_jar" depends="jar" description="Builds a JAR archive containing the JDFLib-J binaries.">
		<echo>Copying JAR file: ${dist.dir}/${major.filename}.jar</echo>
		<copy file="${dist.dir}/${base.filename}.jar" tofile="${dist.dir}/${major.filename}.jar"/>
	</target>

	<target name="clean" depends="-init" description="Cleans the build.">
		<echo>Cleaning...</echo>
		<delete dir="${bin.dir}" />
		<delete dir="${dist.dir}" />
	</target>
	<target name="dist" depends="major_jar" description="Build a jar file and copy it to Bambi's src/lib folder">
		<echo>Build BambiCore and copy it to ${lib.dir}</echo>
		<copy file="${dist.dir}/${major.filename}.jar"  todir="${lib.dir}"/>
	</target>
	<target name="test" description="Runs JUnit tests." depends="compile">
			<property name="test.bin.dir" value="${bin.dir}/test" />
			<mkdir dir="${test.bin.dir}" />
			<property name="test.reports.dir" value="${bin.dir}/test-reports" />
			<mkdir dir="${test.reports.dir}" />
			<!-- Compile test cases -->
			<echo>Compiling unit tests...</echo>
			<javac destdir="${test.bin.dir}" debug="${build.debug}" target="1.5" source="1.5">
				<src path="${test.src.dir}" />
				<classpath refid="project.class.path" />
				<classpath path="${bin.dir}" />
				<include name="**/*" />
			</javac>
			<!-- Run test cases -->
			<echo>Running unit tests...</echo>
			<property name="test.working.dir" value="${test.src.dir}" />
			<junit timeout="60000" dir="${test.working.dir}" fork="true" tempdir="${test.bin.dir}" failureproperty="test.failure" errorproperty="test.error">
				<formatter type="plain" />
				<formatter type="xml" />
				<classpath>
					<pathelement path="${java.class.path}" />
					<fileset dir="${lib.dir}">
						<include name="**/*.jar" />
					</fileset>
					<pathelement path="${bin.dir}" />
					<pathelement path="${test.bin.dir}" />
					<pathelement path="${test.src.dir}" />
				</classpath>
				<batchtest fork="yes" todir="${test.reports.dir}">
					<fileset dir="${test.bin.dir}">
						<include name="**/*Test.class" />
					</fileset>
				</batchtest>
			</junit>
			<!-- Delete temp files -->
			<delete>
				<fileset dir="${test.working.dir}">
					<include name="temp*" />
					<include name="temp/*" />
				</fileset>
			</delete>
			<echo>Tests reports can be found in: ${test.reports.dir}</echo>
		</target>
</project>
